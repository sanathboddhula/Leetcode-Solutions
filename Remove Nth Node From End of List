# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        
        '''
        Steps:
            1. Create a dummy node
            2. Instantiate left and right pointer
            3. Increment right pointer n # of times
            4. Increment left and rigth pointer until right.val is None
            5. Set left.next = left.next.next
            6. Return dummy.next
        '''
        dummy = ListNode(0, head)
        left = dummy
        right = head
        
        while n > 0 and right:
            right = right.next
            n-=1
        
        while right:
            left = left.next
            right = right.next
            
        #skip over value
        left.next = left.next.next
        
        return dummy.next
        
        
            
        

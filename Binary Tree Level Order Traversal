# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    from collections import deque 
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        '''
        Steps:
            1. Create Empty Queue
            2. Initialize with root
            3. Pop from Front Push kids to bacl
            4. Repeat until Queue is empty
        '''
        
        
        q = deque([root])
        levels = []
        while q:
            level = []
            for i in range(len(q)):
                curr = q.popleft()
                if curr.left:
                    q.append(curr.left)
                if curr.right:
                    q.append(curr.right)
                level.append(curr.val)
            levels.append(level)
                
        return levels
